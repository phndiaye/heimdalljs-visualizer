{"version":3,"sources":["vendor/ember-cli/app-prefix.js","heimdalljs-visualizer/app.js","heimdalljs-visualizer/components/basic-tree.js","heimdalljs-visualizer/components/drop-zone.js","heimdalljs-visualizer/components/flame-graph.js","heimdalljs-visualizer/components/slow-node-times.js","heimdalljs-visualizer/controllers/application.js","heimdalljs-visualizer/controllers/flame.js","heimdalljs-visualizer/controllers/graph.js","heimdalljs-visualizer/controllers/graph/index.js","heimdalljs-visualizer/controllers/graph/node.js","heimdalljs-visualizer/controllers/selected-node.js","heimdalljs-visualizer/controllers/slow-nodes.js","heimdalljs-visualizer/event_dispatcher.js","heimdalljs-visualizer/helpers/and.js","heimdalljs-visualizer/helpers/app-version.js","heimdalljs-visualizer/helpers/eq.js","heimdalljs-visualizer/helpers/gt.js","heimdalljs-visualizer/helpers/gte.js","heimdalljs-visualizer/helpers/includes.js","heimdalljs-visualizer/helpers/is-array.js","heimdalljs-visualizer/helpers/is-equal.js","heimdalljs-visualizer/helpers/lt.js","heimdalljs-visualizer/helpers/lte.js","heimdalljs-visualizer/helpers/not-eq.js","heimdalljs-visualizer/helpers/not.js","heimdalljs-visualizer/helpers/ns-to-ms.js","heimdalljs-visualizer/helpers/or.js","heimdalljs-visualizer/helpers/stats-iterator.js","heimdalljs-visualizer/helpers/xor.js","heimdalljs-visualizer/initializers/app-version.js","heimdalljs-visualizer/initializers/container-debug-adapter.js","heimdalljs-visualizer/resolver.js","heimdalljs-visualizer/router.js","heimdalljs-visualizer/services/graph.js","heimdalljs-visualizer/templates/application.js","heimdalljs-visualizer/templates/components/basic-tree.js","heimdalljs-visualizer/templates/components/drop-zone.js","heimdalljs-visualizer/templates/components/flame-graph.js","heimdalljs-visualizer/templates/components/slow-node-times.js","heimdalljs-visualizer/templates/flame.js","heimdalljs-visualizer/templates/graph.js","heimdalljs-visualizer/templates/graph/index.js","heimdalljs-visualizer/templates/graph/node.js","heimdalljs-visualizer/templates/slow-nodes.js","heimdalljs-visualizer/utils/d3-flame-graphs-v4/d3-flame-graph.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-config.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["\"use strict\";\n\n\n","define('heimdalljs-visualizer/app', ['exports', 'heimdalljs-visualizer/resolver', 'ember-load-initializers', 'heimdalljs-visualizer/config/environment'], function (exports, _resolver, _emberLoadInitializers, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  const App = Ember.Application.extend({\n    modulePrefix: _environment.default.modulePrefix,\n    podModulePrefix: _environment.default.podModulePrefix,\n    Resolver: _resolver.default\n  });\n\n  (0, _emberLoadInitializers.default)(App, _environment.default.modulePrefix);\n\n  exports.default = App;\n});","define('heimdalljs-visualizer/components/basic-tree', ['exports', 'd3-selection', 'd3-hierarchy', 'd3-zoom'], function (exports, _d3Selection, _d3Hierarchy, _d3Zoom) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  const run = Ember.run,\n        get = Ember.get,\n        inject = Ember.inject;\n\n\n  const DURATION = 500;\n\n  // The offset amount (in px) from the left or right side of a node\n  // box to offset lines between nodes, so the lines don't come right\n  // up to the edge of the box.\n  const NODE_OFFSET_SIZE = 50;\n\n  // copied these functions temporarily from `broccoli-viz` here:\n  // https://github.com/ember-cli/broccoli-viz/blob/master/lib/node-by-id.js\n\n  exports.default = Ember.Component.extend({\n    classNames: ['basic-tree'],\n\n    graph: inject.service(),\n\n    init() {\n      this._super(...arguments);\n\n      this._graphData = null;\n    },\n\n    didReceiveAttrs() {\n      let graphData = get(this, 'graphData');\n\n      if (this._lastGraphData !== graphData && graphData) {\n        run.schedule('render', this, this.drawTree, graphData);\n\n        this._lastGraphData = graphData;\n      }\n    },\n\n    nodeFilter(node) {\n      return node.label.broccoliNode;\n    },\n\n    drawTree(graphNode) {\n      let svgContainer = this.element.querySelector('.svg-container');\n      svgContainer.innerHTML = '';\n\n      let svg = (0, _d3Selection.select)(svgContainer).append(\"svg\").attr(\"preserveAspectRatio\", \"xMinYMin meet\").attr(\"viewBox\", \"0 0 300 300\").classed(\"svg-content\", true);\n\n      let g = svg.append(\"g\");\n\n      // Compute the width of a line of text. For now we'll fake it\n      // by assuming a constant char width. Add 20 for 'padding'.\n      // TODO: convert to the real line size based on the real characters.\n      function computeLineWidth(str) {\n        const CHAR_WIDTH = 5;\n        let val = str.length * CHAR_WIDTH + 20;\n        return val;\n      }\n\n      // Given a node, compute the width of the box needed to hold\n      // the text of the element, by computing the max of the widths\n      // of all the text lines.\n      function computeNodeWidth(d) {\n        return Math.max(computeLineWidth(d.data.label.name), computeLineWidth(`total: ${(d.value / 1000000).toFixed(2)}`), computeLineWidth(`self: ${(d.data._stats.time.self / 1000000).toFixed(2)}`), computeLineWidth(`node id: ${d.data._id}`));\n      }\n\n      let root = (0, _d3Hierarchy.hierarchy)(graphNode, node => {\n        let children = [];\n        for (let child of node.adjacentIterator()) {\n          if (this.nodeFilter && !this.nodeFilter(child)) {\n            continue;\n          }\n\n          children.push(child);\n        }\n\n        return children;\n      }).sum(d => d._stats.time.self).each(d => d.computedWidth = computeNodeWidth(d));\n\n      // For each node height (distance above leaves, which are height = 0)\n      // keep track of the maximum cell width at that height and then use that\n      // to compute the desired X position for all the nodes at that height.\n      let nodeHeightData = [];\n\n      root.each(d => {\n        let heightData = nodeHeightData[d.height];\n        if (heightData === undefined) {\n          heightData = { maxWidth: d.computedWidth, x: 0 };\n          nodeHeightData[d.height] = heightData;\n        } else if (heightData.maxWidth < d.computedWidth) {\n          heightData.maxWidth = d.computedWidth;\n        }\n      });\n\n      // Now that we have the maxWidth data for all the heights, compute\n      // the X position for all the cells at each height.\n      // Each height except the root will have NODE_OFFSET_SIZE on the front.\n      // Each height except the leaves (height=0) will have NODE_OFFSET_SIZE after it.\n      // We have to iterate through the list in reverse, since height 0\n      // has its X value calculated last.\n      let currX = 0;\n\n      for (let i = nodeHeightData.length - 1; i >= 0; i--) {\n        let item = nodeHeightData[i];\n        item.x = currX;\n        currX = currX + item.maxWidth + 2 * NODE_OFFSET_SIZE;\n      }\n\n      // for debugging\n      self.root = root;\n\n      // Create the graph. The nodeSize() is [8,280] (width, height) because we \n      // want to change the orientation of the graph from top-down to left-right.\n      // To do that we reverse X and Y for calculations and translations.\n      let graph = (0, _d3Hierarchy.cluster)().separation(() => 8).nodeSize([9, 280]);\n\n      function update(source) {\n        graph(root);\n        let nodes = root.descendants();\n        let links = root.links();\n        let node = g.selectAll(\".node\").data(nodes, d => d.data.id);\n\n        // The graph is laid out by graph() as vertically oriented\n        // (the root is at the top). We want to show it as horizontally\n        // oriented (the root is at the left). In addition, we want\n        // each 'row' of nodes to show up as a column with the cells\n        // aligned on their left edge at the cell's 0 point.\n        // To do all this, we'll flip the d.x and d.y values when translating\n        // the node to its position.\n        root.each(d => d.y = nodeHeightData[d.height].x);\n\n        // For the 'enter' set, create a node for each entry.\n        // Move the node to the computed node point (remembering\n        // that X and Y are reversed so we get a horizontal graph).\n        let nodeEnter = node.enter().append(\"g\").attr(\"class\", 'node').attr(\"transform\", d => `translate(${d.y},${d.x})`).on('click', d => {\n          // Toggle children on click.\n          if (d.children) {\n            d._children = d.children;\n            d.children = null;\n          } else {\n            d.children = d._children;\n            d._children = null;\n          }\n          update(d);\n        });\n\n        // Draw the node in a box\n        nodeEnter.append(\"rect\").attr('x', 0).attr('y', '-2em').attr('width', function (d) {\n          return d.computedWidth;\n        }).attr('height', \"4em\").attr('stroke', \"black\").attr('stroke-width', 1).style('fill', \"#fff\");\n\n        // Draw a box in a separate color for the first line as\n        // a 'title'. \n        nodeEnter.append(\"rect\").attr('x', 0).attr('y', '-2em').attr('width', function (d) {\n          return d.computedWidth;\n        }).attr('height', \"1em\").attr('stroke', \"black\").attr('stroke-width', 1).style('fill', \"#000000\");\n\n        nodeEnter.append(\"text\").attr('text-anchor', 'middle').attr(\"x\", d => d.computedWidth / 2).attr(\"y\", '-1.7em').attr(\"class\", \"nodetitle\").attr(\"font-weight\", \"bold\").text(function (d) {\n          return `${d.data.label.name}`;\n        });\n\n        nodeEnter.append(\"text\").attr('text-anchor', 'middle').attr(\"x\", d => d.computedWidth / 2).attr(\"y\", '-0.4em').text(function (d) {\n          return `total: ${(d.value / 1000000).toFixed(2)}`;\n        });\n\n        nodeEnter.append(\"text\").attr('text-anchor', 'middle').attr(\"x\", d => d.computedWidth / 2).attr(\"y\", '0.8em').text(function (d) {\n          return `self: ${(d.data._stats.time.self / 1000000).toFixed(2)}`;\n        });\n\n        nodeEnter.append(\"text\").attr('text-anchor', 'middle').attr(\"x\", d => d.computedWidth / 2).attr(\"y\", '2.0em').text(function (d) {\n          return `node id: ${d.data._id}`;\n        });\n\n        // update exiting node locations\n        node.transition().duration(DURATION).attr('transform', d => `translate(${d.y},${d.x})`);\n\n        // Transition exiting nodes to the parent's new position.\n        node.exit().transition().duration(DURATION).attr(\"transform\", function () {\n          return \"translate(\" + source.x + \",\" + source.y + \")\";\n        }).remove();\n\n        // Create all the links between the various nodes. Each node\n        // will have the link from an earlier node (higher height)\n        // come into the 0 point for the node, and the links to lower\n        // height nodes start at the right edge of the node (+ NODE_OFFSET_SIZE).\n        let link = g.selectAll(\".link\").data(links, d => d.target.data.id);\n\n        link.enter().append(\"path\").attr(\"class\", \"link\").attr(\"d\", function (d) {\n          let sourceExitY = d.source.y + d.source.computedWidth + NODE_OFFSET_SIZE;\n          let targetEntranceY = d.target.y - NODE_OFFSET_SIZE;\n\n          return \"M\" + d.target.y + \",\" + d.target.x + \"L\" + targetEntranceY + \",\" + d.target.x + \" \" + sourceExitY + \",\" + d.target.x + \" \" + sourceExitY + \",\" + d.source.x + \" \" + (sourceExitY - NODE_OFFSET_SIZE) + \",\" + d.source.x;\n        });\n\n        link.transition().duration(DURATION).attr(\"d\", function (d) {\n          let sourceExitY = d.source.y + d.source.computedWidth + NODE_OFFSET_SIZE;\n          let targetEntranceY = d.target.y - NODE_OFFSET_SIZE;\n\n          return \"M\" + d.target.y + \",\" + d.target.x + \"L\" + targetEntranceY + \",\" + d.target.x + \" \" + sourceExitY + \",\" + d.target.x + \" \" + sourceExitY + \",\" + d.source.x + \" \" + (sourceExitY - NODE_OFFSET_SIZE) + \",\" + d.source.x;\n        });\n\n        // update exiting link locations\n        link.exit().transition().duration(DURATION / 2).attr(\"transform\", function () {\n          return \"translate(\" + source.x + \",\" + source.y + \")\";\n        }).remove();\n      }\n\n      update(root);\n\n      let zoomHandler = (0, _d3Zoom.zoom)().on(\"zoom\", () => {\n        g.attr(\"transform\", _d3Selection.event.transform);\n      });\n\n      function transform() {\n        return _d3Zoom.zoomIdentity.translate(48, 120).scale(0.10);\n      }\n\n      svg.call(zoomHandler.transform, transform());\n      svg.call(zoomHandler);\n    }\n  });\n});","define(\"heimdalljs-visualizer/components/drop-zone\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n    classNames: [\"drop-zone\"],\n    classNameBindings: [\"dropping:drop-zone--dropping\"],\n    attributeBindings: [\"draggable\"],\n\n    dropping: false,\n    draggable: true,\n\n    dragOver() {\n      return false;\n    },\n\n    dragEnter() {\n      this.set(\"dropping\", true);\n    },\n\n    dragLeave() {\n      this.set(\"dropping\", false);\n    },\n\n    drop(event) {\n      event.preventDefault();\n      this.didDrop(event);\n    }\n  });\n});","define('heimdalljs-visualizer/components/flame-graph', ['exports', 'heimdalljs-visualizer/utils/d3-flame-graphs-v4/d3-flame-graph'], function (exports, _d3FlameGraph) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  const run = Ember.run,\n        get = Ember.get,\n        inject = Ember.inject;\n  exports.default = Ember.Component.extend({\n    classNames: ['flame-graph'],\n    graph: inject.service(),\n    flameGraph: null,\n    totalTime: Ember.computed.alias('graph.data.summary.totalTime'),\n\n    init() {\n      this._super(...arguments);\n\n      this._graphData = null;\n    },\n\n    didReceiveAttrs() {\n      this._scheduleDraw();\n    },\n\n    _scheduleDraw() {\n      let graphData = get(this, 'graph.graph');\n\n      if (this._lastGraphData !== graphData && graphData) {\n        run.schedule('render', this, this.drawFlame, graphData);\n\n        this._lastGraphData = graphData;\n      }\n    },\n\n    formatTime(ms) {\n      if (ms > 1000000000) {\n        return (Math.round(ms / 1000000000 * 100) / 100).toFixed(1) + 's';\n      } else if (ms > 1000000) {\n        return (Math.round(ms / 1000000 * 100) / 100).toFixed(0) + 'ms';\n      } else {\n        return (Math.round(ms / 1000000 * 100) / 100).toFixed(1) + 'ms';\n      }\n    },\n\n    convert(rawData) {\n      let node = {\n        value: rawData._stats.time.self,\n        treeValue: rawData._stats.time.self,\n        name: rawData._label.name + (rawData._label.broccoliPluginName ? ' (' + rawData._label.broccoliPluginName + ')' : ''),\n        stats: rawData._stats,\n        children: []\n      };\n\n      if (!rawData._children) {\n        return node;\n      }\n\n      let treeValue = node.treeValue;\n      let _ref = rawData._children;\n      for (let _i = 0, _len = _ref.length; _i < _len; _i++) {\n        let child = _ref[_i];\n        let subTree = this.convert(child);\n        if (subTree) {\n          node.children.push(subTree);\n          treeValue += subTree.treeValue;\n        }\n      }\n      node.treeValue = treeValue;\n      node.time = this.formatTime(node.treeValue);\n      node.percent = (node.treeValue / this.get('totalTime') * 100).toFixed(1) + \"%\";\n      return node;\n    },\n\n    drawFlame(data) {\n      let profile = this.convert(data);\n      let indent = -1;\n\n      let objToString = obj => {\n        indent++;\n        let str = '';\n        let pad = \"&nbsp;\";\n        for (let p in obj) {\n          if (obj.hasOwnProperty(p) && p !== 'own') {\n            if (typeof obj[p] === 'object') {\n              if (p !== 'time' || p === 'time' && Object.keys(obj[p]).length > 1) {\n                let padded = p + pad.repeat(13).substring(0, pad.length * 13 - p.length * 6);\n                str += '&nbsp;'.repeat(indent) + padded + (indent <= 0 ? '<br/>' : '') + objToString(obj[p]);\n              }\n            } else {\n              if (p === 'count') {\n                let padded = pad.repeat(5).substring(0, pad.length * 5 - obj[p].toString().length * 6) + obj[p];\n                str += padded;\n              } else if (p === 'time') {\n                let time = this.formatTime(obj[p]);\n                let padded = ' ' + pad.repeat(8).substring(0, pad.length * 8 - time.length * 6) + time + '<br/>';\n                str += padded;\n              }\n            }\n          }\n        }\n        indent--;\n        return str;\n      };\n\n      let tooltip = d => {\n        let time = this.formatTime(d.data.treeValue);\n        let percent = \" [\" + (d.data.treeValue / this.get('totalTime') * 100).toFixed(1) + \"%]\";\n        let self = \" (self: \" + this.formatTime(d.data.stats.time.self) + \")\";\n        return d.data.name + \"<br/>\" + time + percent + self + \"<br/>\" + objToString(d.data.stats);\n      };\n\n      let clientHeight = document.getElementsByClassName('flame-graph')[0].clientHeight;\n      clientHeight -= clientHeight % 20;\n      let clientWidth = document.getElementsByClassName('flame-graph')[0].clientWidth;\n\n      this.flameGraph = new _d3FlameGraph.default('#d3-flame-graph', profile, true).size([clientWidth, clientHeight]).cellHeight(20).zoomEnabled(true).zoomAction((node, event) => self.console.log('Zoom: ', node, event)).labelFunction(d => d.data.name + ' [' + d.data.time + ' / ' + d.data.percent + ']').tooltip(tooltip).render();\n    }\n  });\n});","define('heimdalljs-visualizer/components/slow-node-times', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _slicedToArray = function () {\n    function sliceIterator(arr, i) {\n      var _arr = [];\n      var _n = true;\n      var _d = false;\n      var _e = undefined;\n\n      try {\n        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n          _arr.push(_s.value);\n\n          if (i && _arr.length === i) break;\n        }\n      } catch (err) {\n        _d = true;\n        _e = err;\n      } finally {\n        try {\n          if (!_n && _i[\"return\"]) _i[\"return\"]();\n        } finally {\n          if (_d) throw _e;\n        }\n      }\n\n      return _arr;\n    }\n\n    return function (arr, i) {\n      if (Array.isArray(arr)) {\n        return arr;\n      } else if (Symbol.iterator in Object(arr)) {\n        return sliceIterator(arr, i);\n      } else {\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n      }\n    };\n  }();\n\n  const get = Ember.get,\n        set = Ember.set,\n        computed = Ember.computed,\n        inject = Ember.inject;\n\n\n  function selfTime(node) {\n    for (let _ref of node.statsIterator()) {\n      var _ref2 = _slicedToArray(_ref, 2);\n\n      let statName = _ref2[0];\n      let value = _ref2[1];\n\n      if (statName === 'time.self') {\n        return value;\n      }\n    }\n    return 0;\n  }\n\n  // Given a node, compute the total time taken by the node\n  // and its children (by summing the total time of the children\n  // and adding the self time of the node). Return that value,\n  // and assign it to the _stats.time.plugin attribute of the node.\n  // Note: we skip the non-broccoliNodes except at the beginning\n  // (the root of the tree is not a broccoliNode, but we want to\n  // proceed to its children\n  function computeNodeTimes(node) {\n    var total = selfTime(node);\n\n    for (let childNode of node.adjacentIterator()) {\n      if (childNode.label.broccoliNode) {\n        total += computeNodeTimes(childNode);\n      }\n    }\n\n    Ember.set(node._stats.time, 'plugin', total);\n\n    return total;\n  }\n\n  exports.default = Ember.Component.extend({\n    graph: inject.service(),\n\n    init() {\n      this._super(...arguments);\n      this.sortDescending = true;\n    },\n\n    nodes: computed('data', 'filter', 'pluginNameFilter', 'groupByPluginName', function () {\n      let data = this.get('data');\n\n      let nodes = [];\n\n      if (!data) {\n        return nodes;\n      }\n\n      computeNodeTimes(data); // start at root node of tree (which is not a broccoliNode)\n\n      for (let node of data.dfsIterator()) {\n        if (node.label.broccoliNode) {\n          nodes.push(node);\n        }\n      }\n\n      let pluginNameFilter = this.get('pluginNameFilter');\n      if (pluginNameFilter) {\n        nodes = nodes.filter(node => {\n          return node.label.broccoliNode && (pluginNameFilter === node.label.broccoliPluginName || pluginNameFilter === 'undefined' && node.label.broccoliPluginName === undefined);\n        });\n      }\n\n      // Note: the following is also gathering stats for the items that\n      // have no broccoliPluginName (the 'name' is undefined).\n      let groupByPluginName = this.get('groupByPluginName');\n      if (groupByPluginName) {\n        let pluginNameMap = nodes.reduce((memo, node) => {\n          let pluginName = node.label.broccoliPluginName;\n          memo[pluginName] = memo[pluginName] || { count: 0, time: 0 };\n          memo[pluginName].time += node._stats.time.plugin;\n          memo[pluginName].count++;\n          return memo;\n        }, {});\n\n        nodes = [];\n\n        for (let pluginName in pluginNameMap) {\n          nodes.push({\n            groupedByPluginName: true,\n            label: { name: pluginName, broccoliPluginName: pluginNameMap[pluginName].count },\n            _stats: {\n              time: { plugin: pluginNameMap[pluginName].time }\n            }\n          });\n        }\n      }\n\n      return nodes;\n    }).readOnly(),\n\n    pluginNames: computed('nodes', function () {\n      let nodes = this.get('nodes');\n\n      if (!nodes || nodes.length === 0) {\n        return [];\n      }\n\n      // If the first item in the list is an object with\n      // 'groupedByPluginName' = true, we just need to pull\n      // off the label as the plugin name. If not, we need\n      // to create a map of the plugin names and return that.\n      let pluginNames = [];\n\n      if (nodes[0].groupedByPluginName === true) {\n        pluginNames = nodes.map(node => node.label.name);\n      } else {\n        let pluginNameMap = nodes.reduce((memo, node) => {\n          let pluginName = node.label.broccoliPluginName;\n          memo[pluginName] = pluginName;\n          return memo;\n        }, {});\n\n        pluginNames = Object.keys(pluginNameMap);\n      }\n\n      pluginNames.sort();\n\n      return pluginNames;\n    }).readOnly(),\n\n    sortedNodes: computed('nodes', 'sortDescending', function () {\n      let sortDescending = this.get('sortDescending');\n      return this.get('nodes').sort((a, b) => {\n        if (sortDescending) {\n          return b._stats.time.plugin - a._stats.time.plugin;\n        } else {\n          return a._stats.time.plugin - b._stats.time.plugin;\n        }\n      });\n    }).readOnly(),\n\n    totalTime: computed('nodes', function () {\n      let nodes = this.get('nodes');\n\n      return nodes.reduce(function (previousValue, node) {\n        return previousValue + node._stats.time.plugin;\n      }, 0);\n    }).readOnly(),\n\n    actions: {\n      'focus-node'(node) {\n        this.get('graph').selectNode(node);\n      },\n\n      toggleDetailsForNode(node) {\n        if (node.groupedByPluginName) {\n          this.set('groupByPluginName', false);\n          this.set('pluginNameFilter', node.label.name);\n        } else {\n          let shown = get(node, 'showDetails');\n          set(node, 'showDetails', !shown);\n        }\n      },\n\n      toggleTime() {\n        this.toggleProperty('sortDescending');\n      },\n\n      selectFilter(value) {\n        this.set('pluginNameFilter', value === 'clearFilter' ? undefined : value);\n      }\n    }\n  });\n});","define('heimdalljs-visualizer/controllers/application', ['exports', 'fetch'], function (exports, _fetch) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  const inject = Ember.inject;\n  exports.default = Ember.Controller.extend({\n    graph: inject.service(),\n\n    _setGraphFromFile(file) {\n      const reader = new FileReader();\n\n      reader.onload = e => {\n        this.get('graph').setGraph(JSON.parse(e.target.result));\n        this.set('showUploadModal', false);\n      };\n\n      reader.readAsText(file);\n    },\n\n    actions: {\n      parseFile(event) {\n        this._setGraphFromFile(event.target.files[0]);\n      },\n\n      onFileDrop(event) {\n        this._setGraphFromFile(event.dataTransfer.files[0]);\n      },\n\n      useSample(url) {\n        (0, _fetch.default)(url).then(response => {\n          return response.json();\n        }).then(contents => {\n          this.get('graph').setGraph(contents);\n          this.set('showUploadModal', false);\n        });\n      },\n\n      clearData() {\n        this.get('graph').clearGraph();\n      }\n    }\n  });\n});","define('heimdalljs-visualizer/controllers/flame', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  const Controller = Ember.Controller,\n        inject = Ember.inject;\n  exports.default = Controller.extend({\n    graph: inject.service()\n  });\n});","define('heimdalljs-visualizer/controllers/graph', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  const Controller = Ember.Controller,\n        getOwner = Ember.getOwner,\n        computed = Ember.computed,\n        inject = Ember.inject;\n  exports.default = Controller.extend({\n    graph: inject.service(),\n\n    route: computed.alias('router.currentPath'),\n\n    init() {\n      this._super(...arguments);\n      this.set('router', getOwner(this).lookup('router:main'));\n    }\n  });\n});","define('heimdalljs-visualizer/controllers/graph/index', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  const inject = Ember.inject;\n  exports.default = Ember.Controller.extend({\n    graph: inject.service()\n  });\n});","define('heimdalljs-visualizer/controllers/graph/node', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  const inject = Ember.inject;\n  exports.default = Ember.Controller.extend({\n    graph: inject.service()\n  });\n});","define('heimdalljs-visualizer/controllers/selected-node', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  const inject = Ember.inject;\n  exports.default = Ember.Controller.extend({\n    graph: inject.service()\n  });\n});","define('heimdalljs-visualizer/controllers/slow-nodes', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  const inject = Ember.inject;\n  exports.default = Ember.Controller.extend({\n    graph: inject.service(),\n\n    actions: {\n      parseFile(event) {\n        let reader = new FileReader();\n        reader.onload = e => {\n          var contents = e.target.result;\n          this.get('graph').setGraph(JSON.parse(contents));\n        };\n\n        reader.readAsText(event.target.files[0]);\n      }\n    }\n  });\n});","define('heimdalljs-visualizer/event_dispatcher', ['exports', 'ember-native-dom-event-dispatcher'], function (exports, _emberNativeDomEventDispatcher) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _emberNativeDomEventDispatcher.default;\n    }\n  });\n});","define('heimdalljs-visualizer/helpers/and', ['exports', 'ember-truth-helpers/helpers/and'], function (exports, _and) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _and.default;\n    }\n  });\n  Object.defineProperty(exports, 'and', {\n    enumerable: true,\n    get: function () {\n      return _and.and;\n    }\n  });\n});","define('heimdalljs-visualizer/helpers/app-version', ['exports', 'heimdalljs-visualizer/config/environment', 'ember-cli-app-version/utils/regexp'], function (exports, _environment, _regexp) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.appVersion = appVersion;\n  const version = _environment.default.APP.version;\n  function appVersion(_, hash = {}) {\n    if (hash.hideSha) {\n      return version.match(_regexp.versionRegExp)[0];\n    }\n\n    if (hash.hideVersion) {\n      return version.match(_regexp.shaRegExp)[0];\n    }\n\n    return version;\n  }\n\n  exports.default = Ember.Helper.helper(appVersion);\n});","define('heimdalljs-visualizer/helpers/eq', ['exports', 'ember-truth-helpers/helpers/equal'], function (exports, _equal) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _equal.default;\n    }\n  });\n  Object.defineProperty(exports, 'equal', {\n    enumerable: true,\n    get: function () {\n      return _equal.equal;\n    }\n  });\n});","define('heimdalljs-visualizer/helpers/gt', ['exports', 'ember-truth-helpers/helpers/gt'], function (exports, _gt) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _gt.default;\n    }\n  });\n  Object.defineProperty(exports, 'gt', {\n    enumerable: true,\n    get: function () {\n      return _gt.gt;\n    }\n  });\n});","define('heimdalljs-visualizer/helpers/gte', ['exports', 'ember-truth-helpers/helpers/gte'], function (exports, _gte) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _gte.default;\n    }\n  });\n  Object.defineProperty(exports, 'gte', {\n    enumerable: true,\n    get: function () {\n      return _gte.gte;\n    }\n  });\n});","define('heimdalljs-visualizer/helpers/includes', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Helper.helper(function ([haystack, needle]) {\n    return haystack && haystack.includes && haystack.includes(needle);\n  });\n});","define('heimdalljs-visualizer/helpers/is-array', ['exports', 'ember-truth-helpers/helpers/is-array'], function (exports, _isArray) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _isArray.default;\n    }\n  });\n  Object.defineProperty(exports, 'isArray', {\n    enumerable: true,\n    get: function () {\n      return _isArray.isArray;\n    }\n  });\n});","define('heimdalljs-visualizer/helpers/is-equal', ['exports', 'ember-truth-helpers/helpers/is-equal'], function (exports, _isEqual) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _isEqual.default;\n    }\n  });\n  Object.defineProperty(exports, 'isEqual', {\n    enumerable: true,\n    get: function () {\n      return _isEqual.isEqual;\n    }\n  });\n});","define('heimdalljs-visualizer/helpers/lt', ['exports', 'ember-truth-helpers/helpers/lt'], function (exports, _lt) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _lt.default;\n    }\n  });\n  Object.defineProperty(exports, 'lt', {\n    enumerable: true,\n    get: function () {\n      return _lt.lt;\n    }\n  });\n});","define('heimdalljs-visualizer/helpers/lte', ['exports', 'ember-truth-helpers/helpers/lte'], function (exports, _lte) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _lte.default;\n    }\n  });\n  Object.defineProperty(exports, 'lte', {\n    enumerable: true,\n    get: function () {\n      return _lte.lte;\n    }\n  });\n});","define('heimdalljs-visualizer/helpers/not-eq', ['exports', 'ember-truth-helpers/helpers/not-equal'], function (exports, _notEqual) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _notEqual.default;\n    }\n  });\n  Object.defineProperty(exports, 'notEq', {\n    enumerable: true,\n    get: function () {\n      return _notEqual.notEq;\n    }\n  });\n});","define('heimdalljs-visualizer/helpers/not', ['exports', 'ember-truth-helpers/helpers/not'], function (exports, _not) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _not.default;\n    }\n  });\n  Object.defineProperty(exports, 'not', {\n    enumerable: true,\n    get: function () {\n      return _not.not;\n    }\n  });\n});","define('heimdalljs-visualizer/helpers/ns-to-ms', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.nsToMs = nsToMs;\n  function nsToMs([time]) {\n    return (time / 1000000).toFixed(2);\n  }\n\n  exports.default = Ember.Helper.helper(nsToMs);\n});","define('heimdalljs-visualizer/helpers/or', ['exports', 'ember-truth-helpers/helpers/or'], function (exports, _or) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _or.default;\n    }\n  });\n  Object.defineProperty(exports, 'or', {\n    enumerable: true,\n    get: function () {\n      return _or.or;\n    }\n  });\n});","define('heimdalljs-visualizer/helpers/stats-iterator', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  var _slicedToArray = function () {\n    function sliceIterator(arr, i) {\n      var _arr = [];\n      var _n = true;\n      var _d = false;\n      var _e = undefined;\n\n      try {\n        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n          _arr.push(_s.value);\n\n          if (i && _arr.length === i) break;\n        }\n      } catch (err) {\n        _d = true;\n        _e = err;\n      } finally {\n        try {\n          if (!_n && _i[\"return\"]) _i[\"return\"]();\n        } finally {\n          if (_d) throw _e;\n        }\n      }\n\n      return _arr;\n    }\n\n    return function (arr, i) {\n      if (Array.isArray(arr)) {\n        return arr;\n      } else if (Symbol.iterator in Object(arr)) {\n        return sliceIterator(arr, i);\n      } else {\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n      }\n    };\n  }();\n\n  exports.default = Ember.Helper.helper(function ([node]) {\n    let stats = {};\n\n    for (let _ref of node.statsIterator()) {\n      var _ref2 = _slicedToArray(_ref, 2);\n\n      let name = _ref2[0];\n      let value = _ref2[1];\n\n      stats[name] = value;\n    }\n\n    return stats;\n  });\n});","define('heimdalljs-visualizer/helpers/xor', ['exports', 'ember-truth-helpers/helpers/xor'], function (exports, _xor) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _xor.default;\n    }\n  });\n  Object.defineProperty(exports, 'xor', {\n    enumerable: true,\n    get: function () {\n      return _xor.xor;\n    }\n  });\n});","define('heimdalljs-visualizer/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'heimdalljs-visualizer/config/environment'], function (exports, _initializerFactory, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  let name, version;\n  if (_environment.default.APP) {\n    name = _environment.default.APP.name;\n    version = _environment.default.APP.version;\n  }\n\n  exports.default = {\n    name: 'App Version',\n    initialize: (0, _initializerFactory.default)(name, version)\n  };\n});","define('heimdalljs-visualizer/initializers/container-debug-adapter', ['exports', 'ember-resolver/resolvers/classic/container-debug-adapter'], function (exports, _containerDebugAdapter) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'container-debug-adapter',\n\n    initialize() {\n      let app = arguments[1] || arguments[0];\n\n      app.register('container-debug-adapter:main', _containerDebugAdapter.default);\n      app.inject('container-debug-adapter:main', 'namespace', 'application:main');\n    }\n  };\n});","define('heimdalljs-visualizer/resolver', ['exports', 'ember-resolver'], function (exports, _emberResolver) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _emberResolver.default;\n});","define('heimdalljs-visualizer/router', ['exports', 'heimdalljs-visualizer/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  const Router = Ember.Router.extend({\n    location: _environment.default.locationType,\n    rootURL: _environment.default.rootURL\n  });\n\n  Router.map(function () {\n    this.route('graph', { path: '/' }, function () {\n      this.route('node');\n    });\n\n    this.route('slow-nodes');\n    this.route('flame');\n  });\n\n  exports.default = Router;\n});","define('heimdalljs-visualizer/services/graph', ['exports', 'heimdalljs-visualizer/config/environment', 'heimdalljs-graph'], function (exports, _environment, _heimdalljsGraph) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  const getOwner = Ember.getOwner;\n\n\n  const DATA_STORAGE_KEY = `${_environment.default.storageVersion}_graph-data`;\n  const SELECTED_NODE_STORAGE_KEY = `${_environment.default.storageVersion}_selected-node-id`;\n\n  exports.default = Ember.Service.extend({\n    init() {\n      this._super(...arguments);\n\n      let data = sessionStorage.getItem(DATA_STORAGE_KEY);\n      if (data) {\n        this.setGraph(JSON.parse(data));\n      }\n\n      let selectedNodeId = sessionStorage.getItem(SELECTED_NODE_STORAGE_KEY);\n      if (selectedNodeId && data) {\n        let graph = this.get('graph');\n        for (let node of graph.dfsIterator()) {\n          if (node.id === selectedNodeId) {\n            this.set('selectedNode', node);\n            break;\n          }\n        }\n      }\n    },\n\n    setGraph(data) {\n      let graph = _heimdalljsGraph.default.loadFromJSON(data);\n\n      try {\n        sessionStorage.setItem(DATA_STORAGE_KEY, JSON.stringify(data));\n      } catch (e) {\n        // ignore errors from sessionStorage\n      }\n\n      this.set('data', data);\n      this.set('graph', graph);\n    },\n\n    clearGraph() {\n      this.set('data', null);\n      this.set('graph', null);\n\n      sessionStorage.removeItem(DATA_STORAGE_KEY);\n      sessionStorage.removeItem(SELECTED_NODE_STORAGE_KEY);\n    },\n\n    selectNode(node) {\n      sessionStorage.setItem(SELECTED_NODE_STORAGE_KEY, node.id);\n\n      this.set('selectedNode', node);\n      getOwner(this).lookup('router:main').transitionTo('graph.node');\n    }\n  });\n});","define(\"heimdalljs-visualizer/templates/application\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"oUakfZRD\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[6,\\\"section\\\"],[9,\\\"class\\\",\\\"global-nav hero is-light\\\"],[7],[0,\\\"\\\\n  \\\"],[6,\\\"nav\\\"],[9,\\\"class\\\",\\\"nav\\\"],[7],[0,\\\"\\\\n    \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"nav-left\\\"],[7],[0,\\\"\\\\n      \\\"],[4,\\\"link-to\\\",[\\\"graph\\\"],[[\\\"class\\\",\\\"activeClass\\\"],[\\\"nav-item is-tab\\\",\\\"is-active\\\"]],{\\\"statements\\\":[[0,\\\"Graph\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n      \\\"],[4,\\\"link-to\\\",[\\\"slow-nodes\\\"],[[\\\"class\\\",\\\"activeClass\\\"],[\\\"nav-item is-tab\\\",\\\"is-active\\\"]],{\\\"statements\\\":[[0,\\\"Nodes\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n      \\\"],[4,\\\"link-to\\\",[\\\"flame\\\"],[[\\\"class\\\",\\\"activeClass\\\"],[\\\"nav-item is-tab\\\",\\\"is-active\\\"]],{\\\"statements\\\":[[0,\\\"Flame\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n    \\\"],[8],[0,\\\"\\\\n\\\\n    \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"nav-center\\\"],[7],[0,\\\"\\\\n      \\\"],[6,\\\"p\\\"],[9,\\\"class\\\",\\\"nav-item title\\\"],[7],[0,\\\"\\\\n        Heimdall Visualizer\\\\n      \\\"],[8],[0,\\\"\\\\n    \\\"],[8],[0,\\\"\\\\n\\\\n    \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"nav-right\\\"],[7],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[25,\\\"not\\\",[[20,[\\\"graph\\\",\\\"data\\\"]]],null]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[6,\\\"a\\\"],[9,\\\"href\\\",\\\"#\\\"],[9,\\\"class\\\",\\\"nav-item\\\"],[3,\\\"action\\\",[[19,0,[]],[25,\\\"action\\\",[[19,0,[]],[25,\\\"mut\\\",[[20,[\\\"showUploadModal\\\"]]],null],true],null]]],[7],[0,\\\"\\\\n          Upload Data\\\\n        \\\"],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"        \\\"],[6,\\\"a\\\"],[9,\\\"href\\\",\\\"#\\\"],[9,\\\"class\\\",\\\"nav-item\\\"],[3,\\\"action\\\",[[19,0,[]],\\\"clearData\\\"]],[7],[0,\\\"\\\\n          Clear Data\\\\n        \\\"],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"\\\\n      \\\"],[6,\\\"a\\\"],[9,\\\"class\\\",\\\"nav-item\\\"],[9,\\\"href\\\",\\\"https://github.com/rwjblue/heimdalljs-visualizer\\\"],[7],[0,\\\"\\\\n        \\\"],[6,\\\"span\\\"],[9,\\\"class\\\",\\\"icon\\\"],[7],[0,\\\"\\\\n          \\\"],[6,\\\"i\\\"],[9,\\\"class\\\",\\\"fa fa-github\\\"],[7],[8],[0,\\\"\\\\n        \\\"],[8],[0,\\\"\\\\n      \\\"],[8],[0,\\\"\\\\n    \\\"],[8],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n\\\"],[8],[0,\\\"\\\\n\\\\n\\\"],[6,\\\"div\\\"],[10,\\\"class\\\",[26,[\\\"modal \\\",[25,\\\"if\\\",[[20,[\\\"showUploadModal\\\"]],\\\"is-active\\\"],null]]]],[7],[0,\\\"\\\\n  \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"modal-background\\\"],[7],[8],[0,\\\"\\\\n  \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"modal-content\\\"],[7],[0,\\\"\\\\n    \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"box\\\"],[7],[0,\\\"\\\\n      \\\"],[6,\\\"form\\\"],[7],[0,\\\"\\\\n        \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"control is-grouped\\\"],[7],[0,\\\"\\\\n          \\\"],[6,\\\"label\\\"],[9,\\\"class\\\",\\\"label\\\"],[7],[0,\\\"Upload the output of \\\"],[6,\\\"code\\\"],[7],[0,\\\"BROCCOLI_VIZ=1 ember build\\\"],[8],[0,\\\":\\\"],[8],[0,\\\"\\\\n          \\\"],[6,\\\"p\\\"],[9,\\\"class\\\",\\\"control\\\"],[7],[0,\\\"\\\\n            \\\"],[6,\\\"input\\\"],[9,\\\"name\\\",\\\"file-upload\\\"],[9,\\\"type\\\",\\\"file\\\"],[10,\\\"onchange\\\",[25,\\\"action\\\",[[19,0,[]],\\\"parseFile\\\"],null],null],[7],[8],[0,\\\"\\\\n          \\\"],[8],[0,\\\"\\\\n        \\\"],[8],[0,\\\"\\\\n        \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"control is-grouped\\\"],[7],[0,\\\"\\\\n          \\\"],[6,\\\"label\\\"],[9,\\\"class\\\",\\\"label\\\"],[7],[0,\\\"Sample File:\\\"],[8],[0,\\\"\\\\n          \\\"],[6,\\\"p\\\"],[9,\\\"class\\\",\\\"control\\\"],[7],[0,\\\"\\\\n          \\\"],[6,\\\"span\\\"],[9,\\\"class\\\",\\\"select is-small\\\"],[7],[0,\\\"\\\\n            \\\"],[6,\\\"select\\\"],[10,\\\"onchange\\\",[25,\\\"action\\\",[[19,0,[]],\\\"useSample\\\"],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[7],[0,\\\"\\\\n              \\\"],[6,\\\"option\\\"],[9,\\\"selected\\\",\\\"\\\"],[9,\\\"disabled\\\",\\\"\\\"],[7],[0,\\\"Choose sample file\\\"],[8],[0,\\\"\\\\n              \\\"],[6,\\\"option\\\"],[9,\\\"value\\\",\\\"./broccoli-viz-files/initial-build-canary-ember-cli-20170206.json\\\"],[7],[0,\\\"Empty Project - 2017-02-06\\\"],[8],[0,\\\"\\\\n              \\\"],[6,\\\"option\\\"],[9,\\\"value\\\",\\\"./broccoli-viz-files/ghost-initial-build-canary-ember-cli-20170206.json\\\"],[7],[0,\\\"Ghost Admin Client - 2017-02-06\\\"],[8],[0,\\\"\\\\n            \\\"],[8],[0,\\\"\\\\n          \\\"],[8],[0,\\\"\\\\n          \\\"],[8],[0,\\\"\\\\n        \\\"],[8],[0,\\\"\\\\n      \\\"],[8],[0,\\\"\\\\n    \\\"],[8],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n  \\\"],[6,\\\"button\\\"],[9,\\\"class\\\",\\\"modal-close\\\"],[3,\\\"action\\\",[[19,0,[]],[25,\\\"action\\\",[[19,0,[]],[25,\\\"mut\\\",[[20,[\\\"showUploadModal\\\"]]],null],false],null]]],[7],[8],[0,\\\"\\\\n\\\"],[8],[0,\\\"\\\\n\\\\n\\\"],[4,\\\"if\\\",[[20,[\\\"graph\\\",\\\"data\\\"]]],null,{\\\"statements\\\":[[0,\\\"  \\\"],[1,[18,\\\"outlet\\\"],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"  \\\"],[6,\\\"section\\\"],[9,\\\"class\\\",\\\"upload-data-banner hero is-fullheight is-light\\\"],[7],[0,\\\"\\\\n    \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"hero-body\\\"],[7],[0,\\\"\\\\n\\\"],[4,\\\"drop-zone\\\",null,[[\\\"didDrop\\\"],[[25,\\\"action\\\",[[19,0,[]],\\\"onFileDrop\\\"],null]]],{\\\"statements\\\":[[0,\\\"        \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"container has-text-centered\\\"],[7],[0,\\\"\\\\n          \\\"],[6,\\\"a\\\"],[9,\\\"href\\\",\\\"#\\\"],[3,\\\"action\\\",[[19,0,[]],[25,\\\"action\\\",[[19,0,[]],[25,\\\"mut\\\",[[20,[\\\"showUploadModal\\\"]]],null],true],null]]],[7],[0,\\\"\\\\n            \\\"],[6,\\\"h1\\\"],[9,\\\"class\\\",\\\"title\\\"],[7],[0,\\\"\\\\n              \\\"],[6,\\\"i\\\"],[9,\\\"class\\\",\\\"fa fa-exclamation-triangle\\\"],[7],[8],[0,\\\"\\\\n            \\\"],[8],[0,\\\"\\\\n            \\\"],[6,\\\"h2\\\"],[9,\\\"class\\\",\\\"subtitle\\\"],[7],[0,\\\"\\\\n              Run \\\"],[6,\\\"code\\\"],[7],[0,\\\"BROCCOLI_VIZ=1 ember build\\\"],[8],[0,\\\" and please upload data to begin your analysis.\\\\n            \\\"],[8],[0,\\\"\\\\n          \\\"],[8],[0,\\\"\\\\n        \\\"],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"],[8],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"heimdalljs-visualizer/templates/application.hbs\" } });\n});","define(\"heimdalljs-visualizer/templates/components/basic-tree\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"XVIYZkvm\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[6,\\\"div\\\"],[9,\\\"class\\\",\\\"svg-container\\\"],[7],[0,\\\"\\\\n\\\"],[8]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"heimdalljs-visualizer/templates/components/basic-tree.hbs\" } });\n});","define(\"heimdalljs-visualizer/templates/components/drop-zone\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"ABJYRgFE\", \"block\": \"{\\\"symbols\\\":[\\\"&default\\\"],\\\"statements\\\":[[6,\\\"div\\\"],[9,\\\"class\\\",\\\"content\\\"],[7],[0,\\\"\\\\n  \\\"],[11,1],[0,\\\"\\\\n\\\"],[8],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"heimdalljs-visualizer/templates/components/drop-zone.hbs\" } });\n});","define(\"heimdalljs-visualizer/templates/components/flame-graph\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"+D978SC5\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[6,\\\"div\\\"],[9,\\\"id\\\",\\\"d3-flame-graph\\\"],[7],[0,\\\"\\\\n\\\"],[8]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"heimdalljs-visualizer/templates/components/flame-graph.hbs\" } });\n});","define(\"heimdalljs-visualizer/templates/components/slow-node-times\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"rDb6BWeb\", \"block\": \"{\\\"symbols\\\":[\\\"node\\\",\\\"stat\\\",\\\"value\\\",\\\"pluginName\\\"],\\\"statements\\\":[[6,\\\"div\\\"],[9,\\\"class\\\",\\\"nodes-controls level is-marginless\\\"],[7],[0,\\\"\\\\n  \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"level-left\\\"],[7],[0,\\\"\\\\n    \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"level-item\\\"],[7],[0,\\\"\\\\n      \\\"],[6,\\\"p\\\"],[9,\\\"class\\\",\\\"control has-addons\\\"],[7],[0,\\\"\\\\n        \\\"],[6,\\\"select\\\"],[10,\\\"onchange\\\",[25,\\\"action\\\",[[19,0,[]],\\\"selectFilter\\\"],[[\\\"value\\\"],[\\\"target.value\\\"]]],null],[7],[0,\\\"\\\\n\\\"],[4,\\\"unless\\\",[[20,[\\\"pluginNameFilter\\\"]]],null,{\\\"statements\\\":[[0,\\\"             \\\"],[6,\\\"option\\\"],[9,\\\"disabled\\\",\\\"\\\"],[9,\\\"selected\\\",\\\"\\\"],[7],[0,\\\" - Filter by Plugin Name - \\\"],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[4,\\\"each\\\",[[20,[\\\"pluginNames\\\"]]],null,{\\\"statements\\\":[[0,\\\"             \\\"],[6,\\\"option\\\"],[10,\\\"value\\\",[26,[[19,4,[]]]]],[7],[1,[19,4,[]],false],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[4]},null],[4,\\\"if\\\",[[20,[\\\"pluginNameFilter\\\"]]],null,{\\\"statements\\\":[[0,\\\"             \\\"],[6,\\\"option\\\"],[9,\\\"value\\\",\\\"clearFilter\\\"],[7],[0,\\\"Clear Filter\\\"],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[8],[0,\\\"        \\\\n      \\\"],[8],[0,\\\"\\\\n    \\\"],[8],[0,\\\"\\\\n\\\\n    \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"level-item\\\"],[7],[0,\\\"\\\\n      \\\"],[6,\\\"p\\\"],[9,\\\"class\\\",\\\"control\\\"],[7],[0,\\\"\\\\n        \\\"],[6,\\\"label\\\"],[9,\\\"class\\\",\\\"checkbox\\\"],[7],[0,\\\"\\\\n          \\\"],[6,\\\"input\\\"],[9,\\\"type\\\",\\\"checkbox\\\"],[10,\\\"checked\\\",[18,\\\"groupByPluginName\\\"],null],[10,\\\"onchange\\\",[25,\\\"action\\\",[[19,0,[]],[25,\\\"mut\\\",[[20,[\\\"groupByPluginName\\\"]]],null]],[[\\\"value\\\"],[\\\"target.checked\\\"]]],null],[7],[8],[0,\\\"\\\\n          Group by Plugin Name\\\\n        \\\"],[8],[0,\\\"\\\\n      \\\"],[8],[0,\\\"\\\\n    \\\"],[8],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n\\\"],[8],[0,\\\"\\\\n\\\\n\\\"],[6,\\\"table\\\"],[9,\\\"class\\\",\\\"nodes-table table is-striped\\\"],[7],[0,\\\"\\\\n  \\\"],[6,\\\"thead\\\"],[9,\\\"class\\\",\\\"nodes-table_header\\\"],[7],[0,\\\"\\\\n    \\\"],[6,\\\"tr\\\"],[7],[0,\\\"\\\\n      \\\"],[6,\\\"th\\\"],[7],[0,\\\"Description\\\"],[8],[0,\\\"\\\\n      \\\"],[6,\\\"th\\\"],[7],[1,[25,\\\"if\\\",[[20,[\\\"groupByPluginName\\\"]],\\\"Count\\\",\\\"Plugin Name\\\"],null],false],[8],[0,\\\"\\\\n      \\\"],[6,\\\"th\\\"],[9,\\\"class\\\",\\\"td-time\\\"],[7],[0,\\\"\\\\n        \\\"],[6,\\\"a\\\"],[9,\\\"href\\\",\\\"#\\\"],[9,\\\"class\\\",\\\"nodes-table_toggle\\\"],[3,\\\"action\\\",[[19,0,[]],\\\"toggleTime\\\"]],[7],[0,\\\"Time (ms) \\\"],[6,\\\"i\\\"],[10,\\\"class\\\",[26,[\\\"fa fa-caret-\\\",[25,\\\"if\\\",[[20,[\\\"sortDescending\\\"]],\\\"down\\\",\\\"up\\\"],null]]]],[7],[8],[8],[0,\\\"\\\\n      \\\"],[8],[0,\\\"\\\\n    \\\"],[8],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n\\\\n  \\\"],[6,\\\"tbody\\\"],[7],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[20,[\\\"sortedNodes\\\"]]],null,{\\\"statements\\\":[[0,\\\"      \\\"],[6,\\\"tr\\\"],[9,\\\"class\\\",\\\"table-row\\\"],[3,\\\"action\\\",[[19,0,[]],\\\"toggleDetailsForNode\\\",[19,1,[]]]],[7],[0,\\\"\\\\n        \\\"],[6,\\\"td\\\"],[7],[1,[19,1,[\\\"label\\\",\\\"name\\\"]],false],[8],[0,\\\"\\\\n        \\\"],[6,\\\"td\\\"],[9,\\\"class\\\",\\\"table-row-plugin-name\\\"],[7],[1,[19,1,[\\\"label\\\",\\\"broccoliPluginName\\\"]],false],[8],[0,\\\"\\\\n        \\\"],[6,\\\"td\\\"],[9,\\\"class\\\",\\\"td-time\\\"],[7],[1,[25,\\\"ns-to-ms\\\",[[19,1,[\\\"_stats\\\",\\\"time\\\",\\\"plugin\\\"]]],null],false],[8],[0,\\\"\\\\n      \\\"],[8],[0,\\\"\\\\n\\\"],[4,\\\"if\\\",[[19,1,[\\\"showDetails\\\"]]],null,{\\\"statements\\\":[[0,\\\"        \\\"],[6,\\\"tr\\\"],[7],[0,\\\"\\\\n          \\\"],[6,\\\"td\\\"],[9,\\\"colspan\\\",\\\"3\\\"],[7],[0,\\\"\\\\n            \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"card\\\"],[7],[0,\\\"\\\\n              \\\"],[6,\\\"header\\\"],[9,\\\"class\\\",\\\"card-header\\\"],[7],[0,\\\"\\\\n                \\\"],[6,\\\"p\\\"],[9,\\\"class\\\",\\\"card-header-title\\\"],[7],[0,\\\"\\\\n                  Node Stats\\\\n                \\\"],[8],[0,\\\"\\\\n              \\\"],[8],[0,\\\"\\\\n\\\\n              \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"card-content\\\"],[7],[0,\\\"\\\\n\\\"],[4,\\\"each\\\",[[25,\\\"-each-in\\\",[[25,\\\"stats-iterator\\\",[[19,1,[]]],null]],null]],null,{\\\"statements\\\":[[0,\\\"                  \\\"],[6,\\\"div\\\"],[7],[0,\\\"\\\\n                    \\\"],[6,\\\"strong\\\"],[7],[1,[19,2,[]],false],[8],[0,\\\":\\\\n\\\"],[4,\\\"if\\\",[[25,\\\"includes\\\",[[19,2,[]],\\\"time\\\"],null]],null,{\\\"statements\\\":[[0,\\\"                      \\\"],[1,[25,\\\"ns-to-ms\\\",[[19,3,[]]],null],false],[0,\\\"ms\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"                      \\\"],[1,[19,3,[]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}],[0,\\\"                  \\\"],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[2,3]},null],[0,\\\"              \\\"],[8],[0,\\\"\\\\n\\\\n              \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"card-footer\\\"],[7],[0,\\\"\\\\n                \\\"],[6,\\\"a\\\"],[9,\\\"class\\\",\\\"card-footer-item\\\"],[3,\\\"action\\\",[[19,0,[]],\\\"focus-node\\\",[19,1,[]]]],[7],[0,\\\"Show Graph\\\"],[8],[0,\\\"\\\\n              \\\"],[8],[0,\\\"\\\\n            \\\"],[8],[0,\\\"\\\\n          \\\"],[8],[0,\\\"\\\\n        \\\"],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null]],\\\"parameters\\\":[1]},null],[0,\\\"  \\\"],[8],[0,\\\"\\\\n  \\\"],[6,\\\"tfoot\\\"],[7],[0,\\\"\\\\n    \\\"],[6,\\\"tr\\\"],[7],[0,\\\"\\\\n      \\\"],[6,\\\"td\\\"],[9,\\\"colspan\\\",\\\"3\\\"],[9,\\\"class\\\",\\\"td-time\\\"],[7],[0,\\\"Total: \\\"],[1,[25,\\\"ns-to-ms\\\",[[20,[\\\"totalTime\\\"]]],null],false],[8],[0,\\\"\\\\n    \\\"],[8],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n\\\"],[8]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"heimdalljs-visualizer/templates/components/slow-node-times.hbs\" } });\n});","define(\"heimdalljs-visualizer/templates/flame\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"3lm5ZMs/\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"flame-graph\\\",null,[[\\\"graphData\\\"],[[20,[\\\"graph\\\",\\\"graph\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"heimdalljs-visualizer/templates/flame.hbs\" } });\n});","define(\"heimdalljs-visualizer/templates/graph\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"3RTwBQNM\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"outlet\\\"],false],[0,\\\"\\\\n\\\\n\\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"selected-node-controls hero-footer\\\"],[7],[0,\\\"\\\\n  \\\"],[6,\\\"nav\\\"],[9,\\\"class\\\",\\\"tabs is-boxed is-fullwidth\\\"],[7],[0,\\\"\\\\n    \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"container\\\"],[7],[0,\\\"\\\\n      \\\"],[6,\\\"ul\\\"],[7],[0,\\\"\\\\n        \\\"],[6,\\\"li\\\"],[10,\\\"class\\\",[26,[[25,\\\"if\\\",[[25,\\\"eq\\\",[[20,[\\\"route\\\"]],\\\"graph.index\\\"],null],\\\"is-active\\\"],null]]]],[7],[0,\\\"\\\\n          \\\"],[4,\\\"link-to\\\",[\\\"graph.index\\\"],null,{\\\"statements\\\":[[0,\\\"Full Graph\\\"]],\\\"parameters\\\":[]},null],[0,\\\"\\\\n        \\\"],[8],[0,\\\"\\\\n        \\\"],[6,\\\"li\\\"],[10,\\\"class\\\",[26,[[25,\\\"if\\\",[[25,\\\"eq\\\",[[20,[\\\"route\\\"]],\\\"graph.node\\\"],null],\\\"is-active\\\"],null]]]],[7],[0,\\\"\\\\n\\\"],[4,\\\"link-to\\\",[\\\"graph.node\\\"],null,{\\\"statements\\\":[[0,\\\"            Selected Node: \\\"],[1,[25,\\\"if\\\",[[20,[\\\"graph\\\",\\\"selectedNode\\\"]],[20,[\\\"graph\\\",\\\"selectedNode\\\",\\\"label\\\",\\\"name\\\"]],\\\"None\\\"],null],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"        \\\"],[8],[0,\\\"\\\\n      \\\"],[8],[0,\\\"\\\\n    \\\"],[8],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n\\\"],[8],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"heimdalljs-visualizer/templates/graph.hbs\" } });\n});","define(\"heimdalljs-visualizer/templates/graph/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"1UnCPxXs\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"basic-tree\\\",null,[[\\\"graphData\\\"],[[20,[\\\"graph\\\",\\\"graph\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"heimdalljs-visualizer/templates/graph/index.hbs\" } });\n});","define(\"heimdalljs-visualizer/templates/graph/node\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"cgjGOSyG\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[4,\\\"if\\\",[[20,[\\\"graph\\\",\\\"selectedNode\\\"]]],null,{\\\"statements\\\":[[0,\\\"  \\\"],[1,[25,\\\"basic-tree\\\",null,[[\\\"graphData\\\",\\\"nodeFilter\\\"],[[20,[\\\"graph\\\",\\\"selectedNode\\\"]],null]]],false],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},{\\\"statements\\\":[[0,\\\"  \\\"],[6,\\\"section\\\"],[9,\\\"class\\\",\\\"upload-data-banner hero is-fullheight is-light\\\"],[7],[0,\\\"\\\\n    \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"hero-body\\\"],[7],[0,\\\"\\\\n      \\\"],[6,\\\"div\\\"],[9,\\\"class\\\",\\\"container has-text-centered\\\"],[7],[0,\\\"\\\\n\\\"],[4,\\\"link-to\\\",[\\\"slow-nodes\\\"],null,{\\\"statements\\\":[[0,\\\"          \\\"],[6,\\\"h1\\\"],[9,\\\"class\\\",\\\"title\\\"],[7],[0,\\\"\\\\n            \\\"],[6,\\\"i\\\"],[9,\\\"class\\\",\\\"fa fa-exclamation-triangle\\\"],[7],[8],[0,\\\"\\\\n          \\\"],[8],[0,\\\"\\\\n          \\\"],[6,\\\"h2\\\"],[9,\\\"class\\\",\\\"subtitle\\\"],[7],[0,\\\"\\\\n            Please select a node from the Nodes page.\\\\n          \\\"],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"      \\\"],[8],[0,\\\"\\\\n    \\\"],[8],[0,\\\"\\\\n  \\\"],[8],[0,\\\"\\\\n\\\"]],\\\"parameters\\\":[]}]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"heimdalljs-visualizer/templates/graph/node.hbs\" } });\n});","define(\"heimdalljs-visualizer/templates/slow-nodes\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"RVmF1XuO\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"slow-node-times\\\",null,[[\\\"data\\\"],[[20,[\\\"graph\\\",\\\"graph\\\"]]]]],false],[0,\\\"\\\\n\\\"]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"heimdalljs-visualizer/templates/slow-nodes.hbs\" } });\n});","define('heimdalljs-visualizer/utils/d3-flame-graphs-v4/d3-flame-graph', ['exports', 'd3-selection', 'd3-scale', 'd3-array', 'd3-tip', 'd3-hierarchy', 'd3-transition'], function (exports, _d3Selection, _d3Scale, _d3Array, _d3Tip, _d3Hierarchy) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  function getClassAndMethodName(fqdn) {\n    if (!fqdn) {\n      return \"\";\n    }\n    let tokens = fqdn.split(\".\");\n    return tokens.slice(tokens.length - 2).join(\".\");\n  }\n\n  // Return a vector (0.0 -> 1.0) that is a hash of the input string.\n  // The hash is computed to favor early characters over later ones, so\n  // that strings with similar starts have similar vectors. Only the first\n  // 6 characters are considered.\n  function hash(name) {\n    let ref = [0, 0, 1, 10];\n    let result = ref[0];\n    let maxHash = ref[1];\n    let weight = ref[2];\n    let mod = ref[3];\n\n    name = getClassAndMethodName(name).slice(0, 6);\n\n    for (let i = 0, j = 0, ref1 = name.length - 1; 0 <= ref1 ? j <= ref1 : j >= ref1; i = 0 <= ref1 ? ++j : --j) {\n      result += weight * (name.charCodeAt(i) % mod);\n      maxHash += weight * (mod - 1);\n      weight *= 0.7;\n    }\n    if (maxHash > 0) {\n      return result / maxHash;\n    } else {\n      return result;\n    }\n  }\n\n  const FlameGraphUtils = {\n    // augments each node in the tree with the maximum distance\n    // it is from a terminal node, the list of parents linking\n    // it to the root and filler nodes that balance the representation\n    augment(node, location) {\n      let children = node.children;\n      // d3.partition adds the reverse (depth), here we store the distance\n      // between a node and its furthest leaf\n      if (node.augmented) {\n        return node;\n      }\n      node.originalValue = node.value;\n      node.level = node.children ? 1 : 0;\n      node.hidden = [];\n      node.location = location;\n      if (!(children != null ? children.length : void 0)) {\n        node.augmented = true;\n        return node;\n      }\n      let childSum = children.reduce((sum, child) => sum + child.value, 0);\n      if (childSum < node.value) {\n        children.push({\n          value: node.value - childSum,\n          filler: true\n        });\n      }\n      children.forEach((child, idx) => FlameGraphUtils.augment(child, location + \".\" + idx));\n      node.level += children.reduce((max, child) => Math.max(child.level, max), 0);\n      node.augmented = true;\n      return node;\n    },\n\n    partition(data) {\n      let d3partition = (0, _d3Hierarchy.partition)();\n\n      let root = (0, _d3Hierarchy.hierarchy)(data).sum(d => d.data ? d.data.value : d.value).sort((a, b) => {\n        if (a.filler) {\n          return 1; // move fillers to the right\n        }\n        if (b.filler) {\n          return -1; // move fillers to the right\n        }\n        const name = a.data.name || \"\";\n        return name.localeCompare(b.data.name);\n      });\n      return d3partition(root).descendants();\n    },\n\n    hide(nodes, unhide) {\n      if (unhide === null) {\n        unhide = false;\n      }\n      let sum = arr => arr.reduce((acc, val) => acc + val, 0);\n      let remove = (arr, val) => {\n        // we need to remove precisely one occurrence of initial value\n        let pos = arr.indexOf(val);\n        if (pos >= 0) {\n          return arr.splice(pos, 1);\n        }\n      };\n      let process = (node, val) => {\n        if (unhide) {\n          remove(node.hidden, val);\n        } else {\n          node.hidden.push(val);\n        }\n        return node.value = Math.max(node.originalValue - sum(node.hidden), 0);\n      };\n      let processChildren = (node, val) => {\n        if (!node.children) {\n          return;\n        }\n        return node.children.forEach(child => {\n          process(child, val);\n          return processChildren(child, val);\n        });\n      };\n      let processParents = (node, val) => {\n        let results = [];\n        while (node.parent) {\n          process(node.parent, val);\n          results.push(node = node.parent);\n        }\n        return results;\n      };\n      return nodes.forEach(node => {\n        let val = node.originalValue;\n        processParents(node, val);\n        process(node, val);\n        return processChildren(node, val);\n      });\n    }\n  };\n\n  class FlameGraph {\n    constructor(selector, root, debug) {\n      this._selector = selector;\n      this._generateAccessors(['margin', 'cellHeight', 'zoomEnabled', 'zoomAction', 'tooltip', 'tooltipPlugin', 'color', 'labelFunction']);\n      this._ancestors = [];\n      if (debug == null) {\n        debug = false;\n      }\n\n      // enable logging only if explicitly specified\n      if (debug) {\n        this.console = window.console;\n      } else {\n        this.console = {\n          log() {},\n          time() {},\n          timeEnd() {}\n        };\n      }\n\n      // defaults\n      this._size = [1200, 800];\n      this._cellHeight = 20;\n      this._margin = {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      };\n      this._color = d => {\n        let val = hash(d.data ? d.data.name : d.name);\n        let r = 200 + Math.round(55 * val);\n        let g = 0 + Math.round(230 * (1 - val));\n        let b = 0 + Math.round(55 * (1 - val));\n        return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\n      };\n      this._labelFunction = null;\n      this._tooltipEnabled = true;\n      this._zoomEnabled = true;\n      if (this._tooltipEnabled && _d3Tip.default) {\n        this._tooltipPlugin = (0, _d3Tip.default)();\n      }\n\n      // initial processing of data\n      this.console.time('augment');\n      this.original = FlameGraphUtils.augment(root, '0');\n      this.console.timeEnd('augment');\n      this.root(this.original);\n    }\n\n    size(size) {\n      if (size) {\n        this._size = size;\n        (0, _d3Selection.select)(this._selector).select('.flame-graph').attr('width', this._size[0]).attr('height', this._size[1]);\n        return this;\n      }\n      return this._size;\n    }\n\n    root(root) {\n      if (!root) {\n        return this._root;\n      }\n      this.console.time('partition');\n      this._root = root;\n      this._data = FlameGraphUtils.partition(this._root);\n      this._rootNode = this._data[0];\n      this.console.timeEnd('partition');\n      return this;\n    }\n\n    hide(predicate, unhide) {\n      let matches;\n      if (unhide == null) {\n        unhide = false;\n      }\n      matches = this.select(predicate, false);\n      if (!matches.length) {\n        return;\n      }\n      FlameGraphUtils.hide(matches, unhide);\n      this._data = FlameGraphUtils.partition(this._root);\n      return this.render();\n    }\n\n    zoom(node, event) {\n      if (!this.zoomEnabled()) {\n        throw new Error(\"Zoom is disabled!\");\n      }\n      if (this.tip) {\n        this.tip.hide();\n      }\n      if (this._ancestors.indexOf(node) >= 0) {\n        this._ancestors = this._ancestors.slice(0, this._ancestors.indexOf(node));\n      } else {\n        this._ancestors.push(this._root);\n      }\n      this.root(node.data ? node.data : node).render();\n      if (typeof this._zoomAction === \"function\") {\n        this._zoomAction(node, event);\n      }\n      return this;\n    }\n\n    width() {\n      return this.size()[0] - (this.margin().left + this.margin().right);\n    }\n\n    height() {\n      return this.size()[1] - (this.margin().top + this.margin().bottom);\n    }\n\n    label(d) {\n      if (!(d != null ? d.data.name : void 0)) {\n        return \"\";\n      }\n      let label = typeof this._labelFunction === \"function\" ? this._labelFunction(d) : getClassAndMethodName(d.data.name);\n\n      return label.substr(0, Math.round(this.x(d.x1 - d.x0) / (this.cellHeight() / 10 * 4)));\n    }\n\n    select(predicate, onlyVisible) {\n      let result;\n      if (onlyVisible == null) {\n        onlyVisible = true;\n      }\n      if (onlyVisible) {\n        return this.container.selectAll('.node').filter(predicate);\n      } else {\n        // re-partition the data prior to rendering\n        result = FlameGraphUtils.partition(this.original).filter(predicate);\n        return result;\n      }\n    }\n\n    render() {\n      if (!this._selector) {\n        throw new Error(\"No DOM element provided\");\n      }\n      this.console.time('render');\n      if (!this.container) {\n        this._createContainer();\n      }\n\n      // reset size and scales\n      this.fontSize = this.cellHeight() / 10 * 0.4;\n\n      this.x = (0, _d3Scale.scaleLinear)().domain([0, (0, _d3Array.max)(this._data, d => d.x1)]).range([0, this.width()]);\n\n      let visibleCells = Math.floor(this.height() / this.cellHeight());\n      let maxLevels = this._root.level;\n\n      this.y = (0, _d3Scale.scaleQuantize)().domain([(0, _d3Array.min)(this._data, d => d.y0), (0, _d3Array.max)(this._data, d => d.y0)]).range((0, _d3Array.range)(maxLevels).map(function (_this) {\n        return function (cell) {\n          return (visibleCells - 1 - cell - _this._ancestors.length) * _this.cellHeight();\n        };\n      }(this)));\n\n      // JOIN\n      let data = this._data.filter(function (_this) {\n        return function (d) {\n          return _this.x(d.x1 - d.x0) > 0.4 && _this.y(d.y0) >= 0 && !d.data.filler;\n        };\n      }(this));\n      let renderNode = {\n        x: function (_this) {\n          return function (d) {\n            return _this.x(d.x0);\n          };\n        }(this),\n        y: function (_this) {\n          return function (d) {\n            return _this.y(d.y0);\n          };\n        }(this),\n        width: function (_this) {\n          return function (d) {\n            let res = _this.x(d.x1 - d.x0);\n            return res;\n          };\n        }(this),\n        height: function (_this) {\n          return function () /* d */{\n            return _this.cellHeight();\n          };\n        }(this),\n        text: function (_this) {\n          return function (d) {\n            if (d.data.name && _this.x(d.x1 - d.x0) > 40) {\n              return _this.label(d);\n            }\n          };\n        }(this)\n      };\n      let existingContainers = this.container.selectAll('.node').data(data, d => d.data.location).attr('class', 'node');\n\n      // UPDATE\n      this._renderNodes(existingContainers, renderNode, false, data);\n\n      // ENTER\n      let newContainers = existingContainers.enter().append('g').attr('class', 'node');\n      this._renderNodes(newContainers, renderNode, true, data);\n\n      // EXIT\n      existingContainers.exit().remove();\n      if (this.zoomEnabled()) {\n        this._renderAncestors()._enableNavigation();\n      }\n      if (this.tooltip()) {\n        this._renderTooltip();\n      }\n      this.console.timeEnd('render');\n      this.console.log(`Processed ${this._data.length} items`);\n      return this;\n    }\n\n    _createContainer() {\n      // remove any previously existing svg\n      (0, _d3Selection.select)(this._selector).select('svg').remove();\n      // create main svg container\n      let svg = (0, _d3Selection.select)(this._selector).append('svg').attr('class', 'flame-graph').attr('width', this._size[0]).attr('height', this._size[1]);\n      // we set an offset based on the margin\n      let offset = `translate(${this.margin().left}, ${this.margin().top})`;\n      // this.container will hold all our nodes\n      this.container = svg.append('g').attr('transform', offset);\n\n      // this rectangle draws the border around the flame graph\n      // has to be appended after the container so that the border is visible\n      // we also need to apply the same translation\n      return svg.append('rect').attr('width', this._size[0] - (this._margin.left + this._margin.right)).attr('height', this._size[1] - (this._margin.top + this._margin.bottom)).attr('transform', offset).attr('class', 'border-rect');\n    }\n\n    _renderNodes(containers, attrs, enter, data) {\n      let targetLabels;\n      let targetRects;\n      if (enter == null) {\n        enter = false;\n      }\n      if (!enter) {\n        targetRects = containers.selectAll('rect');\n      }\n      if (enter) {\n        targetRects = containers.append('rect');\n      }\n\n      targetRects.data(data, d => d.data ? d.data.location : d.location).attr('fill', function (_this) {\n        return function (d) {\n          return _this._color(d);\n        };\n      }(this)).transition().attr('width', attrs.width).attr('height', this.cellHeight()).attr('x', attrs.x).attr('y', attrs.y);\n\n      if (!enter) {\n        targetLabels = containers.selectAll('text');\n      }\n      if (enter) {\n        targetLabels = containers.append('text');\n      }\n      targetLabels.data(data, d => d.data ? d.data.location : d.location).attr('class', 'label').style('font-size', this.fontSize + \"em\").transition().attr('dy', this.fontSize / 2 + \"em\").attr('x', function () {\n        return function (d) {\n          return attrs.x(d) + 2;\n        };\n      }(this)).attr('y', function (_this) {\n        return function (d, idx) {\n          return attrs.y(d, idx) + _this.cellHeight() / 2;\n        };\n      }(this)).text(attrs.text);\n      return this;\n    }\n\n    _renderTooltip() {\n      if (!this._tooltipPlugin || !this._tooltipEnabled) {\n        return this;\n      }\n      this.tip = this._tooltipPlugin.attr('class', 'd3-tip').html(this.tooltip()).direction((_this => d => {\n        if (_this.x(d.x0) + _this.x(d.x1 - d.x0) / 2 > _this.width() - 100) {\n          return 'w';\n        }\n        if (_this.x(d.x0) + _this.x(d.x1 - d.x0) / 2 < 100) {\n          return 'e';\n        }\n        return 's';\n      })(this)).offset((_this => d => {\n        let x = _this.x(d.x0) + _this.x(d.x1 - d.x0) / 2;\n        let xOffset = Math.max(Math.ceil(_this.x(d.x1 - d.x0) / 2), 5);\n        let yOffset = Math.ceil(_this.cellHeight() / 2);\n        if (_this.width() - 100 < x) {\n          return [0, -xOffset];\n        }\n        if (x < 100) {\n          return [0, xOffset];\n        }\n        return [yOffset, 0];\n      })(this));\n      this.container.call(this.tip);\n      this.container.selectAll('.node').on('mouseover', function (_this) {\n        return function (d) {\n          return _this.tip.show(d, _d3Selection.event.currentTarget);\n        };\n      }(this)).on('mouseout', this.tip.hide).selectAll('.label').on('mouseover', function (_this) {\n        return function (d) {\n          return _this.tip.show(d, _d3Selection.event.currentTarget.parentNode);\n        };\n      }(this)).on('mouseout', this.tip.hide);\n      return this;\n    }\n\n    _renderAncestors() {\n      let j;\n      let idx;\n      let len;\n      let ancestor;\n      let ancestors;\n      if (!this._ancestors.length) {\n        ancestors = this.container.selectAll('.ancestor').remove();\n        return this;\n      }\n      let ancestorData = this._ancestors.map((ancestor, idx) => ({\n        name: ancestor.name,\n        value: idx + 1,\n        location: ancestor.location,\n        isAncestor: true\n      }));\n      for (idx = j = 0, len = ancestorData.length; j < len; idx = ++j) {\n        ancestor = ancestorData[idx];\n        let prev = ancestorData[idx - 1];\n        if (prev) {\n          prev.children = [ancestor];\n        }\n      }\n\n      // FIXME: this is pretty ugly, but we need to add links between ancestors\n      let renderAncestor = {\n        x: function () {\n          return function () /* d */{\n            return 0;\n          };\n        }(this),\n        y: function (_this) {\n          return function (d) {\n            return _this.height() - d.value * _this.cellHeight();\n          };\n        }(this),\n        width: this.width(),\n        height: this.cellHeight(),\n        text: function () {\n          return function (d) {\n            return \"↩ \" + getClassAndMethodName(d.data ? d.data.name : d.name);\n          };\n        }(this)\n      };\n\n      // JOIN\n      ancestors = this.container.selectAll('.ancestor').data(FlameGraphUtils.partition(ancestorData[0]), d => d.location);\n\n      // UPDATE\n      this._renderNodes(ancestors, renderAncestor, false, ancestorData);\n      // ENTER\n      let newAncestors = ancestors.enter().append('g').attr('class', 'ancestor');\n      this._renderNodes(newAncestors, renderAncestor, true, ancestorData);\n      // EXIT\n      ancestors.exit().remove();\n      return this;\n    }\n\n    _enableNavigation() {\n      let clickable = (_this => d => {\n        let ref;\n        return Math.round(_this.width() - _this.x(d.x1 - d.x0)) > 0 && ((ref = d.children) != null ? ref.length : void 0);\n      })(this);\n\n      this.container.selectAll('.node').classed('clickable', (() => d => clickable(d))(this)).on('click', (_this => d => {\n        if (_this.tip) {\n          _this.tip.hide();\n        }\n        if (clickable(d)) {\n          return _this.zoom(d, _d3Selection.event);\n        }\n      })(this));\n      this.container.selectAll('.ancestor').on('click', (_this => (d, idx) => {\n        if (_this.tip) {\n          _this.tip.hide();\n        }\n        return _this.zoom(_this._ancestors[idx], _d3Selection.event);\n      })(this));\n      return this;\n    }\n\n    _generateAccessors(accessors) {\n      let accessor;\n      let results = [];\n      for (let j = 0, len = accessors.length; j < len; j++) {\n        accessor = accessors[j];\n        results.push(this[accessor] = (accessor => function (newValue) {\n          if (!arguments.length) {\n            return this[\"_\" + accessor];\n          }\n          this[\"_\" + accessor] = newValue;\n          return this;\n        })(accessor));\n      }\n      return results;\n    }\n  }\n  exports.default = FlameGraph;\n});","\n","define('heimdalljs-visualizer/config/environment', [], function() {\n  var prefix = 'heimdalljs-visualizer';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","if (!runningTests) {\n  require(\"heimdalljs-visualizer/app\")[\"default\"].create({\"name\":\"heimdalljs-visualizer\",\"version\":\"0.5.0+82fc9771\"});\n}\n"],"names":[],"mappings":"AAAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChhtnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACthBA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;","file":"heimdalljs-visualizer.js"}