{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","heimdalljs-visualizer/tests/app.lint-test.js","heimdalljs-visualizer/tests/helpers/destroy-app.js","heimdalljs-visualizer/tests/helpers/module-for-acceptance.js","heimdalljs-visualizer/tests/helpers/resolver.js","heimdalljs-visualizer/tests/helpers/start-app.js","heimdalljs-visualizer/tests/integration/components/basic-tree-test.js","heimdalljs-visualizer/tests/integration/components/drop-zone-test.js","heimdalljs-visualizer/tests/test-helper.js","heimdalljs-visualizer/tests/tests.lint-test.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('heimdalljs-visualizer/tests/app.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | app');\n\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/basic-tree.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/basic-tree.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/drop-zone.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/drop-zone.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/flame-graph.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/flame-graph.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/slow-node-times.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/slow-node-times.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/application.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/flame.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/flame.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/graph.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/graph.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/graph/index.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/graph/index.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/graph/node.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/graph/node.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/selected-node.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/selected-node.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/slow-nodes.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/slow-nodes.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/includes.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/includes.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/ns-to-ms.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/ns-to-ms.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/stats-iterator.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/stats-iterator.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('services/graph.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/graph.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('utils/d3-flame-graphs-v4/d3-flame-graph.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'utils/d3-flame-graphs-v4/d3-flame-graph.js should pass ESLint\\n\\n');\n  });\n});","define('heimdalljs-visualizer/tests/helpers/destroy-app', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = destroyApp;\n  function destroyApp(application) {\n    Ember.run(application, 'destroy');\n  }\n});","define('heimdalljs-visualizer/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'heimdalljs-visualizer/tests/helpers/start-app', 'heimdalljs-visualizer/tests/helpers/destroy-app'], function (exports, _qunit, _startApp, _destroyApp) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n  exports.default = function (name, options = {}) {\n    (0, _qunit.module)(name, {\n      beforeEach() {\n        this.application = (0, _startApp.default)();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach() {\n        let afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return Ember.RSVP.resolve(afterEach).then(() => (0, _destroyApp.default)(this.application));\n      }\n    });\n  };\n});","define('heimdalljs-visualizer/tests/helpers/resolver', ['exports', 'heimdalljs-visualizer/resolver', 'heimdalljs-visualizer/config/environment'], function (exports, _resolver, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  const resolver = _resolver.default.create();\n\n  resolver.namespace = {\n    modulePrefix: _environment.default.modulePrefix,\n    podModulePrefix: _environment.default.podModulePrefix\n  };\n\n  exports.default = resolver;\n});","define('heimdalljs-visualizer/tests/helpers/start-app', ['exports', 'heimdalljs-visualizer/app', 'heimdalljs-visualizer/config/environment'], function (exports, _app, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = startApp;\n  function startApp(attrs) {\n    let attributes = Ember.merge({}, _environment.default.APP);\n    attributes = Ember.merge(attributes, attrs); // use defaults, but you can override;\n\n    return Ember.run(() => {\n      let application = _app.default.create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n      return application;\n    });\n  }\n});","define('heimdalljs-visualizer/tests/integration/components/basic-tree-test', ['ember-qunit'], function (_emberQunit) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('basic-tree', 'Integration | Component | basic tree', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"00R7v1G+\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"basic-tree\\\"],false]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this._element.textContent.trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"i4VvR4Vu\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"basic-tree\\\",null,null,{\\\"statements\\\":[[0,\\\"      template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"  \\\"]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.equal(this._element.textContent.trim(), '');\n  });\n});","define('heimdalljs-visualizer/tests/integration/components/drop-zone-test', ['ember-qunit', '@ember/test-helpers'], function (_emberQunit, _testHelpers) {\n  'use strict';\n\n  (0, _emberQunit.moduleForComponent)('drop-zone', 'Integration | Component | drop zone', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    this.didDrop = () => {};\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"LQj1AcXG\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"drop-zone\\\",null,null,{\\\"statements\\\":[[0,\\\"      drop-zone\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"  \\\"]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    assert.ok(this._element.querySelector('.drop-zone') != null);\n    assert.equal(this._element.querySelector('.drop-zone').draggable, true);\n  });\n\n  (0, _emberQunit.test)('it triggers the dragging state', async function (assert) {\n    this.didDrop = () => {};\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"LQj1AcXG\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"drop-zone\\\",null,null,{\\\"statements\\\":[[0,\\\"      drop-zone\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"  \\\"]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    await (0, _testHelpers.triggerEvent)(this._element.querySelector('.drop-zone'), 'dragenter');\n    assert.ok(this._element.querySelector('.drop-zone').classList.contains('drop-zone--dropping'));\n\n    await (0, _testHelpers.triggerEvent)(this._element.querySelector('.drop-zone'), 'dragleave');\n    assert.ok(!this._element.querySelector('.drop-zone').classList.contains('drop-zone--dropping'));\n  });\n\n  (0, _emberQunit.test)('dropping a file triggers the didDrop action', async function (assert) {\n    this.didDrop = event => {\n      assert.equal(event.type, 'drop');\n    };\n\n    this.render(Ember.HTMLBars.template({\n      \"id\": \"P12mjA8A\",\n      \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"drop-zone\\\",null,[[\\\"didDrop\\\"],[[19,0,[\\\"didDrop\\\"]]]],{\\\"statements\\\":[[0,\\\"      drop-zone\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"  \\\"]],\\\"hasEval\\\":false}\",\n      \"meta\": {}\n    }));\n\n    await (0, _testHelpers.triggerEvent)(this._element.querySelector('.drop-zone'), 'drop', {\n      dataTransfer: {\n        files: [new File(['{ \"foo\": \"bar\" }'], 'instrumentation.json')]\n      }\n    });\n\n    assert.expect(1);\n  });\n});","define('heimdalljs-visualizer/tests/test-helper', ['heimdalljs-visualizer/tests/helpers/resolver', 'ember-qunit', 'ember-cli-qunit'], function (_resolver, _emberQunit, _emberCliQunit) {\n  'use strict';\n\n  (0, _emberQunit.setResolver)(_resolver.default);\n  (0, _emberCliQunit.start)();\n});","define('heimdalljs-visualizer/tests/tests.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | tests');\n\n  QUnit.test('helpers/destroy-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/module-for-acceptance.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/start-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/basic-tree-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/basic-tree-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/drop-zone-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/drop-zone-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n});","require('heimdalljs-visualizer/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappingslGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtDA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtCA;AACA;","file":"tests.js"}